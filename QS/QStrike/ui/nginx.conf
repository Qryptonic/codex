server {
    listen 80;
    server_name localhost; # Or your domain name

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; connect-src 'self' wss: ws:; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self' data:; worker-src 'self' blob:;" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression for static assets
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;
    gzip_disable "msie6"; # Disable for old IE

    # Caching headers for static assets (adjust as needed)
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y; # Cache immutable assets for a long time
        add_header Cache-Control "public";
        access_log off; # Don't log access for static assets
    }

    # Handle Single Page Application (SPA) routing
    # Try to serve the requested file directly, then directory, then fallback to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy WebSocket connections for the main gateway
    # Match prefix /ws/jobs/ or /ws/delay/
    location ~ ^/ws/(jobs|delay)/ {
        proxy_pass http://qws-gateway:8080; # Use the service name from docker-compose
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400; # Keep connection open for long-running streams
    }

    # Rate limiting zone definition
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    
    # Proxy API requests (e.g., /api/upload, /api/streams)
    location /api/ {
        # Rate limiting - allow up to 10 requests/sec with a burst of 20
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://upload-service:3000; # Target the upload service directly
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Add other necessary headers if needed by the backend
    }

    # Proxy replay API requests (/replay endpoint)
    location = /replay {
         # Rate limiting for replay API
         limit_req zone=api_limit burst=5 nodelay;
         
         proxy_pass http://replay-svc:8765; # Target the replay service API
         proxy_http_version 1.1;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Proxy replay WebSocket connections (/ws/replay/)
    location ~ ^/ws/replay/ {
        proxy_pass http://replay-svc:8765; # Target the replay service WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400; # Keep connection open
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }
} 